!function(){"use strict";const e=r=>(Reflect.ownKeys(r).forEach((t=>{const a=r[t];a&&"object"==typeof a&&e(a)})),Object.freeze(r)),r=(e,t,a={})=>{for(let o in e){let n=o[0].toUpperCase()+o.substring(1),c=t?t+n:o;null===e[o]?a[t?t+o[0].toUpperCase()+o.substring(1):o]=null:"object"==typeof e[o]?r(e[o],c,a):a[c]=e[o]}return a};function t(e,r){return this.splice(r,0,this.splice(e,1)[0]),this}const a=(e,r)=>{if(Array.isArray(e))return e.map((e=>"object"==typeof e&&null!==e?a(e,r):e));{let t={};for(let o in e)e.hasOwnProperty(o)&&(Array.isArray(e[o])?t[r(o)]=e[o].map((e=>"object"==typeof e&&null!==e?a(e,r):e)):null===e[o]?t[r(o)]=null:"object"==typeof e[o]?t[r(o)]=a(e[o],r):t[r(o)]=e[o]);return t}};module.exports={addMoveToArrayPrototype:function(){Array.prototype.move=t},areSameArrays:(e,r)=>{if(e.length!==r.length)return!1;const t=e.reduce(((e,r)=>{const t=typeof r+":"+r;return e[t]=(e[t]||0)+1,e}),{}),a=r.reduce(((e,r)=>{const t=typeof r+":"+r;return e[t]=(e[t]||0)+1,e}),{});for(const e in t)if(t[e]!==a[e])return!1;return!0},backDate:(e,r="/",t="DDMMYYYY")=>{const a=new Date(Date.now()-24*e*60*60*1e3),o=String(a.getDate()).padStart(2,"0"),n=String(a.getMonth()+1).padStart(2,"0"),c=a.getFullYear(),l={MMDDYYYY:`${n}${r}${o}${r}${c}`,YYYYMMDD:`${c}${r}${n}${r}${o}`,DDMMYYYY:`${o}${r}${n}${r}${c}`};return l[t]||l.DDMMYYYY},camelToKebab:e=>e.replace(/\.?([A-Z])/g,(e=>"-"+e.toLowerCase().replace(/^_/,""))),camelToSnake:e=>e.replace(/\.?([A-Z])/g,(e=>"_"+e.toLowerCase().replace(/^_/,""))),camelToPascal:e=>e.replace(/(^\w|_\w)/g,(e=>e.replace("_","").toUpperCase())),chunk:(e,r)=>!e||0===e.length||r<=0?[]:(r=Math.ceil(r),Array.from({length:Math.ceil(e.length/r)},((t,a)=>e.slice(a*r,a*r+r)))),compareStrings:(e,r)=>{const t=e=>e.replace(/[^a-zA-Z0-9]/g,"").toLowerCase();e=t(e),r=t(r);const a=e.length,o=r.length;if(0===a)return o;if(0===o)return a;const n=Array.from({length:a+1},((e,r)=>Array(o+1).fill(0)));for(let e=0;e<=a;e++)n[e][0]=e;for(let e=0;e<=o;e++)n[0][e]=e;for(let t=1;t<=a;t++)for(let a=1;a<=o;a++){const o=e[t-1]===r[a-1]?0:1;n[t][a]=Math.min(n[t-1][a]+1,n[t][a-1]+1,n[t-1][a-1]+o)}return n[a][o]},deepFreeze:e,doesExist:(e,r,t)=>{const a=e=>"object"==typeof e&&null!==e&&(Array.isArray(e)?e.some(a):e[r]==t||Object.values(e).some((e=>a(e))));return e.some(a)},escapeHtml:e=>"string"!=typeof e?"":e=e.toString().replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/'/g,"&#39;").replace(/"/g,"&quot;"),flattenObject:r,friendlyUrlString:e=>(e=e||"").trim().split("").map((e=>{let r="ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖÙÚÛÜÝßàáâãäåæçèéêëìíîïðñòóôõöùúûüýÿ".indexOf(e);return r>-1?"aaaaaaaceeeeiiiidnooooouuuuysaaaaaaaceeeeiiiidnooooouuuuyy"[r]:e})).join("").toLowerCase().replace(/[&?]/gi,"").replace(/\s\s/g,"-").replace(/\s/g,"-").replace(/-+/g,"-").replace(/[^a-z0-9-]/gi,"").trim(),groupByArrayOfObjects:(e,r)=>e.reduce(((e,t)=>"object"!=typeof t||null===t||void 0===t[r]?e:Object.assign(e,{[t[r]]:(e[t[r]]||[]).concat(t)})),{}),intersection:(e,r)=>{const t=new Set(e);return r.filter((e=>t.has(e)))},jsonToMap:e=>{const r=JSON.parse(e);return new Map(Object.entries(r))},mapToJson:e=>{if(!(e instanceof Map))throw new TypeError("Input should be a Map");return JSON.stringify(Object.fromEntries(e))},kebabToCamel:e=>e.replace(/-./g,(e=>e[1].toUpperCase())),kebabToPascal:e=>e.replace(/(-\w)/g,(e=>e[1].toUpperCase())).replace(/^./,(e=>e.toUpperCase())),kebabToSnake:e=>e.replace(/-/g,"_"),pascalToCamel:e=>e.replace(/^./,(e=>e.toLowerCase())),pascalToKebab:e=>e.replace(/([a-z])([A-Z])/g,"$1-$2").replace(/([A-Z])([A-Z][a-z])/g,"$1-$2").toLowerCase(),pascalToSnake:e=>e.replace(/([A-Z])/g,"_$1").toLowerCase().replace(/^_/,""),pluck:(e,r)=>e.map((e=>e[r])),shuffle:e=>{const r=[...e];for(let e=r.length-1;e>0;e--){const t=Math.floor(Math.random()*(e+1));[r[e],r[t]]=[r[t],r[e]]}return r},snakeToCamel:e=>e.replace(/([-_][a-z])/g,(e=>e.toUpperCase().replace("_","").replace("-",""))),snakeToKebab:e=>e.replace(/_/g,"-"),snakeToPascal:e=>e.replace(/(_\w)/g,(e=>e[1].toUpperCase())).replace(/^./,(e=>e.toUpperCase())),sortArrayOfObjects:(e,r,t="ASC")=>{const a="DESC"===t?-1:1;return e.slice().sort(((e,t)=>e[r]>t[r]?a:-a))},stripHtmlTags:e=>(e=e.toString()).replace(/<[^>]*>/g,""),transformKeys:a,uniqArrayOfObjects:e=>{const r=new Set(e.map((e=>JSON.stringify(e))));return Array.from(r).map((e=>JSON.parse(e)))},uuid:()=>"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,(function(e){const r=16*Math.random()|0;return("x"===e?r:3&r|8).toString(16)})),uuidShort:()=>"xxxxxxxx-xxxx".replace(/[xy]/g,(function(e){const r=16*Math.random()|0;return("x"===e?r:3&r|8).toString(16)}))}}();
